eval "$(rbenv init -)"

# Environment pathing and editor defaults
export PATH="/usr/local/bin:/usr/local/sbin:/usr/local/mysql/bin:/usr/local/heroku/bin:$PATH"
export ARCHFLAGS="-arch i386 -arch x86_64"
export HISTCONTROL=ignoreboth
export HISTFILESIZE=10000
export HISTSIZE=10000
unset MAILCHECK

# Add some color to man pages
export LESS_TERMCAP_md="$(tput setaf 4)"


# Use MacVim's version of the Vim executable instead of the systems
if [ -e /usr/local/bin/brew ]; then
  export MACVIM_BASE=`brew --cellar macvim`
  export MACVIM_VERSION=`brew list --versions macvim --compact | cut -d ' ' -f 2`
  alias vim="$MACVIM_BASE/$MACVIM_VERSION/MacVim.app/Contents/MacOS/Vim"
fi

export EDITOR=vim


# http://ss64.com/bash/shopt.html
shopt -s histappend
shopt -s nocaseglob
shopt -s cdspell


# Prompts
# ------------------------------------------

# Color settings
export TERM=xterm-color
export GREP_OPTIONS='--color=auto' GREP_COLOR='0;36'
export CLICOLOR=1

# Color          | Escaped    | ANSI
# -------------- | ---------- | ------------
# No Color       | \033[0m    | x (default foreground)
# Black          | \033[0;30m | a
# Grey           | \033[1;30m | A
# Red            | \033[0;31m | b
# Bright Red     | \033[1;31m | B
# Green          | \033[0;32m | c
# Bright Green   | \033[1;32m | C
# Brown          | \033[0;33m | d
# Yellow         | \033[1;33m | D
# Blue           | \033[0;34m | e
# Bright Blue    | \033[1;34m | E
# Magenta        | \033[0;35m | f
# Bright Magenta | \033[1;35m | F
# Cyan           | \033[0;36m | g
# Bright Cyan    | \033[1;36m | G
# Bright Grey    | \033[0;37m | h
# White          | \033[1;37m | H

# The order of the attributes are as follows (fgbg):
# 01. directory
# 02. symbolic link
# 03. socket
# 04. pipe
# 05. executable
# 06. block special
# 07. character special
# 08. executable with setuid bit set
# 09. executable with setgid bit set
# 10. directory writable to others, with sticky bit
# 11. directory writable to others, without sticky bit
#      LSCOLORS=0102030405060708091011
export LSCOLORS=excxgxfxbxdxbxbxbxexex

# source ~/.git-prompt.sh

parse_git_branch() {
  __git_ps1 " [%s]"
}

parse_ruby_version() {
  echo " [$(rbenv version-name)]"
}

settitle() {
  echo -n -e "\033]0;$*\007"
}

export GIT_PS1_SHOWDIRTYSTATE='true'
export PS1="\[\033[35m\][\h\[\033[00m\]\[\033[35m\]] \[\033[34m\]\W\[\033[32m\]\$(parse_ruby_version)\[\033[31m\]\$(parse_git_branch)\[\033[00m\] \[\033[0m\]"
export PS2="\[\033[35m\]â†’ \[\033[0m\]"


# Aliases
# ------------------------------------------

# Map git commands through hub
if [ -e /usr/local/bin/hub ]; then
  alias git=hub
fi

# Handy stuff
alias reload="source ~/.bash_profile && cd ../ && cd -"
alias cp='cp -i'
alias mv='mv -i'
alias ls='ls -G'
alias la='ls -lA'
alias ll='ls -l'
alias las='ls -lAS'
alias hi='history | tail -50'
alias be='bundle exec'
alias ..="cd ../"

alias git-prune='git remote | xargs -n1 git remote prune'
alias gs='git status'
alias gc='git commit'
alias ga='git add'
alias ugh='git reset --hard'
alias gra='git remote add'

alias yolo='bundle exec rake db:drop db:setup'

# Completions
# ------------------------------------------

if [ -f `brew --prefix`/etc/bash_completion ]; then
 . `brew --prefix`/etc/bash_completion
fi

# ps_1 was moved so source this file instead
if [ -f /usr/local/share/git-core/contrib/completion/git-prompt.sh ]; then
  source /usr/local/share/git-core/contrib/completion/git-prompt.sh
fi


# Only print if we're in an interactive shell.
# Non-interactive stuff like rsync will blow up otherwise
if [[ "$-" == *"i"* ]]; then
  echo -e "\033[0;35m------------------------------------------\033[0m"
fi

# Democracy Works
# -----------------------------------------
alias dwssh='ssh -i ~/.ssh/devs.pem'
alias import_states='lein run -m election-authority-works.import "{:host \"localdocker\" :port 45672}" ../resources/election_authorities_states.csv'
alias import_authorities='lein run -m election-authority-works.import "{:host \"localdocker\" :port 45672}" ../resources/election_authorities_authorities.csv'
alias import_sample_election='lein run -m election-works.import "{:host \"localdocker\" :port 45672}" ../resources/sample_election_import.csv'
alias setfleet='export FLEETCTL_TUNNEL=10.36.116.233'

### Added by the Heroku Toolbelt
export PATH="/usr/local/heroku/bin:$PATH"

# support for golang
# export PATH=$PATH:/usr/local/go/bin
# export GO15VENDOREXPERIMENT=1
export PATH=$PATH:/usr/local/opt/go/libexec/bin

#aws credentials
# function setawscreds() {
#   if [ $# -ne 0 ]; then
#     export AWS_ACCESS_KEY_ID=`grep -A3 $@ ~/.aws/credentials | grep aws_access_key_id | awk '{print $3}'`
#     export AWS_SECRET_ACCESS_KEY=`grep -A3 $@ ~/.aws/credentials | grep aws_secret_access_key | awk '{print $3}'`
#     unset AWS_SECURITY_TOKEN
#   fi
# }
# setawscreds default
